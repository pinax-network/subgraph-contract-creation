// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Events {
    #[prost(message, repeated, tag="1")]
    pub contract_creations: ::prost::alloc::vec::Vec<ContractCreation>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ContractCreation {
    /// -- block --
    #[prost(message, optional, tag="1")]
    pub block_time: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(string, tag="2")]
    pub block_hash: ::prost::alloc::string::String,
    #[prost(uint64, tag="3")]
    pub block_number: u64,
    #[prost(string, tag="4")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub block_month: ::prost::alloc::string::String,
    /// -- transaction --
    #[prost(string, tag="6")]
    pub transaction_hash: ::prost::alloc::string::String,
    #[prost(uint32, tag="7")]
    pub transaction_index: u32,
    /// -- contract creation --
    ///
    /// The block's global ordinal when the code change was recorded, refer to \[Block\] documentation for further information about ordinals and total ordering.
    #[prost(uint64, tag="8")]
    pub ordinal: u64,
    #[prost(string, tag="9")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub from: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub to: ::prost::alloc::string::String,
    /// The address of the account that deployed the contract.
    #[prost(string, tag="12")]
    pub deployer: ::prost::alloc::string::String,
    #[prost(string, optional, tag="13")]
    pub factory: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="14")]
    pub code: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="15")]
    pub code_hash: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="16")]
    pub input: ::core::option::Option<::prost::alloc::string::String>,
}
// @@protoc_insertion_point(module)
